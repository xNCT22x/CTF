#!/usr/bin/env python3
# @author: Kiyo

#BRAILLE_ENCODE_DICT = {" ":" ", "!":"⠮", '"':"⠐", "#":"⠼", "$":"⠫", "%":"⠩", "&":"⠯", "'":"⠄", "(":"⠷", ")":"⠾", "*":"⠡", "+":"⠬", ",":"⠠", "-":"⠤", ".":"⠨", "/":"⠌", "((0":"⠴", "1":"⠂", "2":"⠆", "3":"⠒", "4":"⠲", "5":"⠢", "6":"⠖", "7":"⠶", "8":"⠦", "9":"⠔", ":":"⠱", ";":"⠰", "<":"⠣", "=":"⠿", ">":"⠜", "?":"⠹", "@":"⠈", "A":"⠁", "B":"⠃", "C":"⠉", "D":"⠙", "E":"⠑", "F":"⠋", "G":"⠛", "H":"⠓", "I":"⠊", "J":"⠚", "K":"⠅", "L":"⠇", "M":"⠍", "N":"⠝", "O":"⠕", "P":"⠏", "Q":"⠟", "R":"⠗", "S":"⠎", "T":"⠞", "U":"⠥", "V":"⠧", "W":"⠺", "X":"⠭", "Y":"⠽", "Z":"⠵", "[":"⠪", "]":"⠻", "^":"⠘", "_":"⠸", "{":"{", "}":"}"}
BRAILLE_DECODE_DICT = {"⠀":"⠀", "!":"⠮", '"':"⠐", "#":"⠼", "$":"⠫", "%":"⠩", "&":"⠯", "'":"⠄", "(":"⠷", ")":"⠾", "*":"⠡", "+":"⠬", ",":"⠠", "-":"⠤", ".":"⠨", "/":"⠌", "0":"⠴", "1":"⠂", "2":"⠆", "3":"⠒", "4":"⠲", "5":"⠢", "6":"⠖", "7":"⠶", "8":"⠦", "9":"⠔", ":":"⠱", ";":"⠰", "<":"⠣", "=":"⠿", ">":"⠜", "?":"⠹", "@":"⠈", "A":"⠁", "B":"⠃", "C":"⠉", "D":"⠙", "E":"⠑", "F":"⠋", "G":"⠛", "H":"⠓", "I":"⠊", "J":"⠚", "K":"⠅", "L":"⠇", "M":"⠍", "N":"⠝", "O":"⠕", "P":"⠏", "Q":"⠟", "R":"⠗", "S":"⠎", "T":"⠞", "U":"⠥", "V":"⠧", "W":"⠺", "X":"⠭", "Y":"⠽", "Z":"⠵", "[":"⠪", "]":"⠻", "^":"⠘", "_":"⠸", "{":"{", "}":"}"}

def decode(instring):
    out = ""
    chunks, chunk_size = len(instring), 1
    for i in range(0, chunks, chunk_size):
        for key, value in BRAILLE_DECODE_DICT.items():
            if value == instring[i:i+chunk_size]:
                out += key
                continue
    return out
"""
def encode(instring):
    out = ""
    for s in instring:
        out += BRAILLE_ENCODE_DICT[s]
    return out
"""
if __name__ == "__main__":
    braille = "⠁⠎⠏⠊⠗⠑{⠁⠞⠀⠽⠕⠥⠗⠀⠋⠊⠝⠛⠑⠗⠞⠊⠏⠎}"
    decoder_result = decode(
